{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS Application Loadbalancer for OpenText UCMDB",
  "Parameters": {
    "VPCId": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "Select a VPC to place the Loadbalancer into"
    },
    "ALBName": {
      "Description": "The Name of the Loadbalancer to be created.",
      "Type": "String",
      "Default": "ucmdbqa",
      "AllowedPattern": "^[a-zA-Z0-9,:/._?&%=+-]*$",
      "MinLength": "1",
      "MaxLength": "40"
    },
    "ALBListenerDefaultCertArn": {
      "Description": "Name of an existing ACM Certificate in this region for the default ssl cert on the ALB",
      "Type": "String",
      "Default": "arn:aws:acm:us-east-2:658787151672:certificate/b9e499bf-c006-4e3d-a3a2-dad9783e30d7"
    },
    "SubnetIds": {
      "Description": "Select VPC Subnets where ALB will be deployed.",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "IngressCIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "IngressCIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.0.0/8",
      "Description": "The CIDR block for the ALB Ingress.",
      "Type": "String"
    },
    "TAGENV": {
      "Description": "Tag for Environment",
      "Default": "Production",
      "Type": "String"
    },
    "TAGCUST": {
      "Description": "Tag for Customer",
      "Default": "Discount Tire",
      "Type": "String"
    },
    "TAGAPP": {
      "Description": "Tag for Application",
      "Default": "BSMOBM",
      "Type": "String"
    },
    "TAGCOSTCENTER": {
      "Description": "Tag for costcenter",
      "Default": "60002",
      "Type": "String"
    },
    "TAGCOSTGROUP": {
      "Description": "Tag for costgroup",
      "Default": "BSMOBMPRD",
      "Type": "String"
    }
  },
  "Mappings": {},
  "Resources": {
    "ALBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "AWS AALB Security Group for access CMS resources.",
        "GroupName": {"Fn::Join": ["",[{"Ref": "ALBName"},"-ALB-SG"]]},
        "VpcId": { "Ref": "VPCId" },
        "Tags": [
          {
            "Key": "Application",
            "Value": { "Ref": "AWS::StackId" }
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join": ["",[{"Ref": "ALBName"},"-ALB-SG"]]}
          },
          {
            "Key": "costcenter",
            "Value": { "Ref":"TAGCOSTCENTER" }
          },
          {
            "Key": "costgroup",
            "Value": { "Ref":"TAGCOSTGROUP" }
          }
        ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 8443,
            "ToPort": 8443,
            "CidrIp": { "Ref": "IngressCIDR" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 443,
            "ToPort": 443,
            "CidrIp": { "Ref": "IngressCIDR" }
          }
        ]
      }
    },
    "UcmdbALB": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Name": {"Fn::Join": ["",[{"Ref": "ALBName"},"-ext-ALB"]]},
        "Scheme": "internet-facing",
        "LoadBalancerAttributes": [
          {
            "Value": "false",
            "Key": "access_logs.s3.enabled"
          },
          {
            "Value": "180",
            "Key": "idle_timeout.timeout_seconds"
          },
          {
            "Value": "false",
            "Key": "deletion_protection.enabled"
          },
          {
            "Value": "true",
            "Key": "routing.http2.enabled"
          },
          {
            "Value": "false",
            "Key": "routing.http.drop_invalid_header_fields.enabled"
          },
          {
            "Value": "defensive",
            "Key": "routing.http.desync_mitigation_mode"
          }
        ],
        "Subnets": {"Ref": "SubnetIds"},
        "SecurityGroups": [{"Ref": "ALBSecurityGroup"}]
      }
    },
    "ALBListener1": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "SslPolicy": "ELBSecurityPolicy-2016-08",
        "Certificates": [{"Ref": "ALBListenerDefaultCertArn"}],
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": {"Ref": "TG443"}
          }
        ],
        "LoadBalancerArn": {"Ref": "UcmdbALB"},
        "Port": "443",
        "Protocol": "HTTPS"
      }
    },
    "ALBListener2": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "SslPolicy": "ELBSecurityPolicy-2016-08",
        "Certificates": [{"Ref": "ALBListenerDefaultCertArn"}],
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": {"Ref": "TG8443"}
          }
        ],
        "LoadBalancerArn": {"Ref": "UcmdbALB"},
        "Port": "8443",
        "Protocol": "HTTPS"
      }
    },
    "ALBListenerRuleWriter": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "DependsOn": "ALBListener2",
      "Properties": {
        "Actions": [
          {
            "Type": "forward",
            "TargetGroupArn": {"Ref": "TG8443-Writer"}
          }
        ],
        "ListenerArn": {"Ref": "ALBListener2"},
        "Priority": 1,
        "Conditions": [
          {
            "Field": "host-header",
            "SourceIpConfig": {"Values": ["ucmdbqawriter.trtc.com"]}
          }
        ]
      }
    },
    "TG443": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "DependsOn": "UcmdbALB",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckPort": "traffic-port",
        "HealthCheckPath": "/ping",
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckProtocol": "HTTPS",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Name": {"Fn::Join": ["",[{"Ref": "ALBName"},"-ALB-TG443"]]},
        "Port": 443,
        "Protocol": "HTTPS",
        "UnhealthyThresholdCount": 2,
        "VpcId": {"Ref": "VPCId"},
        "TargetType": "ip",
        "Matcher": {"HttpCode": "200-399"},
        "TargetGroupAttributes": [
          {
            "Value": "true",
            "Key": "stickiness.enabled"
          },
          {
            "Value": "300",
            "Key": "deregistration_delay.timeout_seconds"
          },
          {
            "Value": "lb_cookie",
            "Key": "stickiness.type"
          },
          {
            "Value": "86400",
            "Key": "stickiness.lb_cookie.duration_seconds"
          },
          {
            "Value": "0",
            "Key": "slow_start.duration_seconds"
          },
          {
            "Value": "round_robin",
            "Key": "load_balancing.algorithm.type"
          }
        ]
      }
    },
    "TG8443": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "DependsOn": "UcdmbALB",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckPort": "traffic-port",
        "HealthCheckPath": "/ping",
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckProtocol": "HTTPS",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Name": {"Fn::Join": ["",[{"Ref": "ALBName"},"-ALB-TG8443"]]},
        "Port": 8443,
        "Protocol": "HTTPS",
        "UnhealthyThresholdCount": 2,
        "VpcId": {"Ref": "VPCId"},
        "TargetType": "ip",
        "Matcher": {"HttpCode": "200-399"},
        "TargetGroupAttributes": [
          {
            "Value": "true",
            "Key": "stickiness.enabled"
          },
          {
            "Value": "300",
            "Key": "deregistration_delay.timeout_seconds"
          },
          {
            "Value": "lb_cookie",
            "Key": "stickiness.type"
          },
          {
            "Value": "86400",
            "Key": "stickiness.lb_cookie.duration_seconds"
          },
          {
            "Value": "0",
            "Key": "slow_start.duration_seconds"
          },
          {
            "Value": "round_robin",
            "Key": "load_balancing.algorithm.type"
          }
        ]
      }
    },
    "TG8443-Writer": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "DependsOn": "UcmdbALB",
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckPort": "traffic-port",
        "HealthCheckPath": "/ping?restrictToWriter=true",
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckProtocol": "HTTPS",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Name": {"Fn::Join": ["",[{"Ref": "ALBName"},"-ALB-TG8443-Writer"]]},
        "Port": 8443,
        "Protocol": "HTTPS",
        "UnhealthyThresholdCount": 2,
        "VpcId": {"Ref": "VPCId"},
        "TargetType": "ip",
        "Matcher": {"HttpCode": "200"},
        "TargetGroupAttributes": [
          {
            "Value": "true",
            "Key": "stickiness.enabled"
          },
          {
            "Value": "300",
            "Key": "deregistration_delay.timeout_seconds"
          },
          {
            "Value": "lb_cookie",
            "Key": "stickiness.type"
          },
          {
            "Value": "86400",
            "Key": "stickiness.lb_cookie.duration_seconds"
          },
          {
            "Value": "0",
            "Key": "slow_start.duration_seconds"
          },
          {
            "Value": "round_robin",
            "Key": "load_balancing.algorithm.type"
          }
        ]
      }
    }
  },
  "Outputs": {
    "HostedZoneId": {
      "Description": "ALB hosted zone id ",
      "Value":{ "Fn::GetAtt" : ["UcmdbALB", "CanonicalHostedZoneID"] }
    },
    "UcmdbALB": {
      "Description": "ALB DNS URL",
      "Value": {
        "Fn::Join": ["",[{"Fn::GetAtt": ["UcmdbALB","DNSName"]}]]
      }
    }
  }
}